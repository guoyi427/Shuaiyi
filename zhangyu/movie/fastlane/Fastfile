# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.111.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "KoMovie") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do    
    match(
      git_url: "ssh://git@git.cias.net.cn:35708/ios/ios_cert.git",
      type: "appstore",
      username: "zhangda@kokozu.net",
      app_identifier: "com.kokozu.movie"
  )
    # snapshot
    # Build your app - more options available
    gym(
      scheme: "KoMovie",
  build_path: "./build/release/",
      output_directory: "./build/release/",
    ) 
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want
  
  # ad hoc to fir.im
  desc "Build ad-hoc ipa then publice it to fir.im"
  lane :fir do
    adhoc_ipa 
    sh "bash ../sh/fir.sh"
  end

  desc "Build ad-hoc ipa"
  lane :adhoc_ipa do
    match(
      git_url: "ssh://git@git.cias.net.cn:35708/ios/ios_cert.git",
      type: "adhoc",
      username: "zhangda@kokozu.net",
      app_identifier: "com.kokozu.movie"
  )
    gym(
      scheme: "KoMovie",
      archive_path: "./build/#{fileTime()}",
      build_path: "./build/",
      output_directory: "./build",
      export_method: "ad-hoc",
      silent: true,
    )
  end


  def fileTime()
  	time = Time.now.strftime("%m-%d %H:%M")
	return time
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
